commit a58c2bef1a4ece6b1facad6a6ac1dfe9bc3353c0
Author: Kalle Ahlstr√∂m <kalle.ahlstrom@nitor.com>
Date:   Mon Jun 2 23:25:52 2025 +0300

    daemon: make tdp_service optional

diff --git a/src/daemon/user.rs b/src/daemon/user.rs
index c5db378..7e16eee 100644
--- a/src/daemon/user.rs
+++ b/src/daemon/user.rs
@@ -109,7 +109,12 @@ pub(crate) type Command = DaemonCommand<()>;
 
 async fn create_connections(
     channel: Sender<Command>,
-) -> Result<(Connection, Connection, JobManagerService, TdpManagerService)> {
+) -> Result<(
+    Connection,
+    Connection,
+    JobManagerService,
+    Result<TdpManagerService>,
+)> {
     let system = Connection::system().await?;
     let connection = Builder::session()?
         .name("com.steampowered.SteamOSManager1")?
@@ -121,8 +126,7 @@ async fn create_connections(
     let jm_service = JobManagerService::new(job_manager, rx, system.clone());
 
     let (tdp_tx, rx) = unbounded_channel();
-    let tdp_service = TdpManagerService::new(rx, &system, &connection).await?;
-
+    let tdp_service = TdpManagerService::new(rx, &system, &connection).await;
     create_interfaces(connection.clone(), system.clone(), channel, jm_tx, tdp_tx).await?;
 
     Ok((connection, system, jm_service, tdp_service))
@@ -151,7 +155,9 @@ pub async fn daemon() -> Result<()> {
     let mut daemon = Daemon::new(subscriber, system, rx).await?;
 
     daemon.add_service(mirror_service);
-    daemon.add_service(tdp_service);
+    if let Ok(tdp_service) = tdp_service {
+        daemon.add_service(tdp_service);
+    }
 
     session.object_server().at("/", ObjectManager {}).await?;
 
