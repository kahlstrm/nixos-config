name: Build WSL tarball
on:
  push:
    branches:
      - main
permissions:
  actions: write
jobs:
  build-wsl-artifact:
    runs-on: ubuntu-latest
    concurrency:
      group: upload-artifact-${{ github.ref_name }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false
      - uses: nixbuild/nix-quick-install-action@v29
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ runner.os }}-
          # collect garbage until Nix store size (in bytes) is at most this number
          # before trying to save a new cache
          gc-max-store-size-linux: 1073741824
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: cache-${{ runner.os }}-
          # created more than this number of seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
      - run: nix flake check
      - run: make wsl
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: wsl-tarball
          path: nixos-wsl.tar.gz
  test-wsl-artifact:
    runs-on: windows-latest
    needs: build-wsl-artifact
    steps:
      - uses: vedantmgoyal9/setup-wsl2@v1.1.0
        with:
          distro: none
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: wsl-tarball
          path: wsl-tarball
      - name: Display structure of downloaded files
        run: ls -R
      - name: Import nixos to WSL
        run: |
          wsl --import nixos C:/WSL wsl-tarball/nixos-wsl.tar.gz --version 2
      - name: Test nixos WSL
        run: |
          wsl -d nixos -- cat /etc/os-release
